from telebot import types


def StartInlineKeyboard(buttons: list[str]) -> types.InlineKeyboardMarkup:
    keyboard = types.InlineKeyboardMarkup(row_width=2)
    for button_text in buttons:
        keyboard.add(
            types.InlineKeyboardButton(text=button_text, callback_data=button_text)
        )
    return keyboard


def StatusInlineKeyboard():
    status_key = types.InlineKeyboardMarkup(row_width=2)
    student_btn = types.InlineKeyboardButton(
        text="üë®‚Äçüéì–°—Ç—É–¥–µ–Ω—Ç", callback_data="üë®‚Äçüéì–°—Ç—É–¥–µ–Ω—Ç"
    )
    teacher_btn = types.InlineKeyboardButton(
        text="üë®‚Äçüè´–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", callback_data="üë®‚Äçüè´–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å"
    )
    back_btn = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="menu")
    status_key.add(student_btn, teacher_btn, back_btn)
    return status_key


def LearningKeyboard():
    learning_key = types.InlineKeyboardMarkup(row_width=2)
    fullTime = types.InlineKeyboardButton(text="–û—á–Ω–æ–µ", callback_data="–û—á–Ω–æ–µ")
    campus = types.InlineKeyboardButton(text="–î–ó–û", callback_data="–î–ó–û")
    back_btn = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="user_type")
    learning_key.add(fullTime, campus, back_btn)
    return learning_key


def CourseKeyboard():
    course_key = types.InlineKeyboardMarkup(row_width=2)
    buttons = ["1", "2", "3", "4"]
    for button in buttons:
        course_key.add(
            types.InlineKeyboardButton(
                text=f"{button} –∫—É—Ä—Å", callback_data=f"{button} –∫—É—Ä—Å"
            )
        )
    back_btn = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="–ù–∞–∑–∞–¥")
    course_key.add(back_btn)
    return course_key


def GroupKeyboard(direction, course):
    group_key = types.InlineKeyboardMarkup(row_width=2)
    back_btn = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="–ù–∞–∑–∞–¥")

    if direction == 1 and course in [1, 2, 3]:
        group_a_btn = types.InlineKeyboardButton("–ì—Ä—É–ø–ø–∞ –ê", callback_data="–ê")
        group_b_btn = types.InlineKeyboardButton("–ì—Ä—É–ø–ø–∞ –ë", callback_data="–ë")
        group_key.add(group_a_btn, group_b_btn, back_btn)
    elif direction == 3 and course in [1, 2]:
        group_a_btn = types.InlineKeyboardButton("–ì—Ä—É–ø–ø–∞ –ê", callback_data="–ê")
        group_b_btn = types.InlineKeyboardButton("–ì—Ä—É–ø–ø–∞ –ë", callback_data="–ë")
        group_key.add(group_a_btn, group_b_btn, back_btn)
    else:
        group_a_btn = types.InlineKeyboardButton("–ì—Ä—É–ø–ø–∞ –ê", callback_data="–ê")
        group_key.add(group_a_btn, back_btn)

    return group_key


def WeekKeyboard():
    week = types.InlineKeyboardMarkup(row_width=5)
    today_btn = types.InlineKeyboardButton(text="–°–µ–≥–æ–¥–Ω—è", callback_data="–°–µ–≥–æ–¥–Ω—è")
    week.add(today_btn)
    monday_btn = types.InlineKeyboardButton("–ü–Ω", callback_data="–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
    tuesday_btn = types.InlineKeyboardButton("–í—Ç", callback_data="–í—Ç–æ—Ä–Ω–∏–∫")
    wednesday_btn = types.InlineKeyboardButton("–°—Ä", callback_data="–°—Ä–µ–¥–∞")
    thursday_btn = types.InlineKeyboardButton("–ß—Ç", callback_data="–ß–µ—Ç–≤–µ—Ä–≥")
    friday_btn = types.InlineKeyboardButton("–ü—Ç", callback_data="–ü—è—Ç–Ω–∏—Ü–∞")
    week.add(monday_btn, tuesday_btn, wednesday_btn, thursday_btn, friday_btn)
    profile_btn = types.InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å", callback_data="–ü—Ä–æ—Ñ–∏–ª—å")
    back_btn = types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="–ù–∞–∑–∞–¥")
    week.add(profile_btn, back_btn)
    return week


def ErrorKeyboard():
    key = types.InlineKeyboardMarkup(row_width=1)
    error_btn = types.InlineKeyboardButton(
        text="–ù–∞–ø–∏—Å–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É", url="https://t.me/waydbae"
    )
    back_btn = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="–ù–∞–∑–∞–¥")
    key.add(error_btn, back_btn)
    return key


def BackKeyboard():
    key = types.InlineKeyboardMarkup()
    back_btn = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="–ù–∞–∑–∞–¥")
    key.add(back_btn)
    return key


def TeacherKeyboard():
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –§–ò–û –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.
    """
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = types.InlineKeyboardMarkup(row_width=1)

    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∞—à –∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    teachers_list = ["–ò–≤–∞–Ω–æ–≤ –ò.–ò.", "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", "–°–∏–¥–æ—Ä–æ–≤ –°.–°."]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    for teacher in teachers_list:
        teacher_btn = types.InlineKeyboardButton(
            text=teacher, callback_data=f"teacher_{teacher}"
        )
        keyboard.add(teacher_btn)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    back_btn = types.InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="user_type")
    keyboard.add(back_btn)

    return keyboard
